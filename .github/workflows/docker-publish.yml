name: Publish OCI image

on:
  push:
    branches:
      - "master"

jobs:
  push_to_registry:
    name: Push OCI image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.YOUR_TOKEN }}
          extra_nix_config: |
            extra-platforms = aarch64-linux

      - run: |
          DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: unmojang/drasl
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: BuildandpushOCIimage
        env: 
          REFERENCES: ${{steps.meta.outputs.tags}}
          GITHUB_TOKEN: ${{secrets.YOUR_TOKEN}}
        
        # Disable formatting of yamlfmt and prettier
        run: |
          echo "$YOUR_TOKEN" | buildah login -u "${{github.actor}}" --password "$GITHUB_TOKEN" ghcr.io
          for
          system in 'x86_64-linux' 'aarch64-linux'; do 
          oci_archive="$(nixbuild--no-link--print-out-paths".#oci-cross-$system")"
          buildah manifest add drasl "docker-archive:$oci_archive"
          done
          # Push the multi-arch image to GHCR
          for reference in $REFERENCES;do 
          buildah manifest push --all -f v2s2 drasl "docker://ghcr.io/${{ github.repository }}/$reference"
          done
