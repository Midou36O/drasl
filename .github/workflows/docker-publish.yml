name: Publish OCI Image

on:
  push:
    branches:
      - "master"

jobs:
  push_to_registry:
    name: Push OCI image to GHCR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.YOUR_TOKEN }}
          extra_nix_config: |
            extra-platforms = aarch64-linux

      - run: |
          DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -q -y && sudo apt-get install -q -y qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/midou36o/drasl
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Debug OCI Files
        run: |
          find /nix/store -name "*.tar.gz" -print
          ls -l /var/tmp/oci*

      - name: Build and push OCI image
        env:
          REFERENCES: ${{ steps.meta.outputs.tags }}
          YOUR_TOKEN: ${{ secrets.YOUR_TOKEN }}
        run: |
          echo "$YOUR_TOKEN" | buildah login -u "$GITHUB_ACTOR" --password-stdin ghcr.io

          buildah manifest create drasl

          for system in 'x86_64-linux' 'aarch64-linux'; do
            oci_archive="$(nix build --no-link --print-out-paths ".#oci-cross-$system")"
            buildah manifest add drasl "oci-archive:$oci_archive"
          done

          for reference in $REFERENCES; do
            buildah manifest push --all -f v2s2 drasl "docker://ghcr.io/midou36o/drasl:$reference"
          done
